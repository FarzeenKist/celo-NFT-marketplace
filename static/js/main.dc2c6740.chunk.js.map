{"version":3,"sources":["components/ui/Notifications.js","utils/index.js","utils/constants.js","components/ui/Identicon.js","components/Wallet.js","assets/img/artistic-style.jpg","components/minter/Cover.js","utils/minter.js","components/minter/nfts/Add.js","components/minter/nfts/Sell.js","context/index.js","components/minter/nfts/Card.js","components/ui/Loader.js","components/minter/nfts/index.js","hooks/useMinterContract.js","hooks/useContract.js","App.js","hooks/useBalance.js","reportWebVitals.js","index.js"],"names":["Notification","_jsx","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","NotificationSuccess","_ref","text","_jsxs","children","className","NotificationError","_ref2","DefaultProps","defaultProps","truncateAddress","address","slice","length","formatBigNumber","num","shiftedBy","toFixed","Identicon","size","rest","_objectWithoutProperties","_excluded","ref","useRef","useEffect","current","innerHTML","appendChild","Jazzicon","parseInt","_objectSpread","style","width","concat","height","Wallet","amount","symbol","destroy","_Fragment","Dropdown","Toggle","variant","align","id","Spinner","animation","Menu","Item","href","target","Stack","direction","gap","Divider","as","onClick","Cover","name","coverImg","connect","minHeight","backgroundImage","imageCov","maxWidth","src","alt","Button","catch","e","console","log","web3","Web3","client","Web3Storage","token","process","formatName","encodeURI","convertObjectToFile","data","blob","Blob","JSON","stringify","type","File","mintNft","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","minterContract","performActions","description","ipfsImage","ownerAddress","attributes","wrap","_context2","prev","next","_ref3","_callee","kit","defaultAccount","fileName","files","cid","url","_context","abrupt","image","owner","methods","getMinterLimit","call","sent","toast","put","send","from","t0","stop","_x4","apply","arguments","_x","_x2","_x3","listNft","_ref5","_callee4","_ref4","tokenId","price","_context4","_ref6","_callee3","_context3","utils","toWei","_x8","_x5","_x6","_x7","buyNft","_ref7","_callee6","seller","_context6","_ref8","_callee5","_context5","value","_x14","_x9","_x10","_x11","_x12","_x13","uploadFileToWebStorage","_ref14","_callee11","file","imageName","_context11","_x24","getOwnersNfts","_ref17","_callee15","nfts","nftsLength","_loop2","i","_context17","totalSupply","nft","_context16","Promise","_ref18","_callee14","resolve","reject","res","meta","_context15","tokenURI","fetchNftMeta","fetchNftOwner","index","_x29","_x30","push","Number","delegateYield","all","t1","_x27","_x28","getActiveItem","_ref19","_callee17","activeNfts","_loop3","_context20","resolvedNft","_context19","_ref20","_callee16","_context18","_x32","_x33","_x31","_ref21","_callee18","ipfsUrl","_context21","axios","get","_x34","_ref22","_callee19","_context22","ownerOf","_x35","_x36","STYLES","EDITION","THEMES","AddNfts","save","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setIpfsImage","_useState5","_useState6","setDescription","_useState7","_useState8","setAttributes","_useState9","_useState10","show","setShow","handleClose","setAttributesFunc","trait_type","attributeObject","arr","findIndex","el","oldArray","_toConsumableArray","Modal","onHide","centered","Header","closeButton","Title","Body","Form","FloatingLabel","controlId","label","Control","placeholder","onChange","imageUrl","alert","Label","hidden","map","_style","toLowerCase","_edition","theme","Footer","disabled","SellNft","setTokenId","setPrice","x","createContext","Provider","content","setContent","setNfts","setActiveNfts","NftCard","contract","rerestAsset","React","useContext","_price","toString","_useContractKit","useContractKit","_React$useState","_React$useState2","handleShow","handleBuy","Col","Card","rel","Badge","bg","objectFit","Text","parseFloat","fromWei","Row","attribute","key","Loader","role","NftList","loading","setLoading","setError","myNFT","setMyNFT","_React$useContext","handleResetAsset","getAssets","_nfts","_activeNfts","finish","getMyNFTs","filter","sellNft","undefined","error","addNft","xs","sm","lg","_nft","Nft","useMinterContract","abi","contractAddress","getConnectedKit","setContract","getContract","useCallback","eth","Contract","useContract","MyNFTAbi","MyNFTContractAddress","MyNFT","App","_useBalance","balance","setBalance","getBalance","getTotalBalance","useBalance","title","collectionActive","setCollectionActive","marketActive","setMarketActive","Container","fluid","Nav","Link","color","CELO","backgroundColor","Nfts","updateBalance","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","ContractKitProvider","networks","Alfajores","network","NetworkNames","rpcUrl","graphQl","explorer","chainId","dapp","document","getElementById"],"mappings":"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","file":"static/js/main.dc2c6740.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ToastContainer } from \"react-toastify\";\n\nconst Notification = () => (\n  <ToastContainer\n    position=\"bottom-center\"\n    autoClose={5000}\n    hideProgressBar\n    newestOnTop\n    closeOnClick\n    rtl={false}\n    pauseOnFocusLoss\n    draggable={false}\n    pauseOnHover\n  />\n);\n\nconst NotificationSuccess = ({ text }) => (\n  <div>\n    <i className=\"bi bi-check-circle-fill text-success mx-2\" />\n    <span className=\"text-secondary mx-1\">{text}</span>\n  </div>\n);\n\nconst NotificationError = ({ text }) => (\n  <div>\n    <i className=\"bi bi-x-circle-fill text-danger mx-2\" />\n    <span className=\"text-secondary mx-1\">{text}</span>\n  </div>\n);\n\nconst Props = {\n  text: PropTypes.string,\n};\n\nconst DefaultProps = {\n  text: \"\",\n};\n\nNotificationSuccess.propTypes = Props;\nNotificationSuccess.defaultProps = DefaultProps;\n\nNotificationError.propTypes = Props;\nNotificationError.defaultProps = DefaultProps;\n\nexport { Notification, NotificationSuccess, NotificationError };\n","import {ERC20_DECIMALS} from \"./constants\";\n\n// format a wallet address\nexport const truncateAddress = (address) => {\n    if (!address) return\n    return address.slice(0, 5) + \"...\" + address.slice(address.length - 4, address.length);\n}\n\n// convert from big number\nexport const formatBigNumber = (num) => {\n    if (!num) return\n    return num.shiftedBy(-ERC20_DECIMALS).toFixed(2);\n}","const ERC20_DECIMALS = 18;\nexport { ERC20_DECIMALS };\n","import { useEffect, useRef } from \"react\";\nimport Jazzicon from \"@metamask/jazzicon\";\n\nexport default function Identicon({ address, size, ...rest }) {\n  const ref = useRef();\n\n  useEffect(() => {\n    if (address && ref.current) {\n      ref.current.innerHTML = \"\";\n      ref.current.appendChild(\n        Jazzicon(size, parseInt(address.slice(2, 10), 16))\n      );\n    }\n  }, [address, size]);\n\n  return (\n    <div {...rest}>\n      <div ref={ref} style={{ width: `${size}px`, height: `${size}px` }} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Dropdown, Stack, Spinner } from \"react-bootstrap\";\nimport { formatBigNumber, truncateAddress } from \"./../utils\";\nimport Identicon from \"./ui/Identicon\";\n\nconst Wallet = ({ address, amount, symbol, destroy }) => {\n  if (address) {\n    return (\n      <>\n        <Dropdown>\n          <Dropdown.Toggle\n            variant=\"light\"\n            align=\"end\"\n            id=\"dropdown-basic\"\n            className=\"d-flex align-items-center border rounded-pill py-1\"\n          >\n            {amount ? (\n              <>\n                {formatBigNumber(amount)}{\" \"}\n                <span className=\"ms-1\"> {symbol}</span>\n              </>\n            ) : (\n              <Spinner animation=\"border\" size=\"sm\" className=\"opacity-25\" />\n            )}\n            <Identicon address={address} size={28} className=\"ms-2 me-1\" />\n          </Dropdown.Toggle>\n\n          <Dropdown.Menu className=\"shadow-lg border-0\">\n            <Dropdown.Item\n              href={`https://alfajores-blockscout.celo-testnet.org/address/${address}/transactions`}\n              target=\"_blank\"\n            >\n              <Stack direction=\"horizontal\" gap={2}>\n                <i className=\"bi bi-person-circle fs-4\" />\n                <span className=\"font-monospace\">\n                  {truncateAddress(address)}\n                </span>\n              </Stack>\n            </Dropdown.Item>\n            <Dropdown.Divider />\n            <Dropdown.Item\n              as=\"button\"\n              className=\"d-flex align-items-center\"\n              onClick={() => {\n                destroy();\n              }}\n            >\n              <i className=\"bi bi-box-arrow-right me-2 fs-4\" />\n              Disconnect\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </>\n    );\n  }\n\n  return null;\n};\n\nexport default Wallet;\n","export default __webpack_public_path__ + \"static/media/artistic-style.ce0472cf.jpg\";","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport imageCov from '../../assets/img/artistic-style.jpg'\n\nconst Cover = ({ name, coverImg, connect }) => {\n  if (name) {\n    return (\n      <div\n        className=\"d-flex justify-content-center flex-column text-center \"\n        style={{  minHeight: \"100vh\", backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.9)), url(${imageCov})` }}\n      >\n        <div className=\"mt-auto text-light mb-5\">\n          <div\n            className=\" ratio ratio-1x1 mx-auto mb-2\"\n            style={{ maxWidth: \"320px\" }}\n          >\n            <img src={coverImg} alt=\"\" />\n          </div>\n          <h1>{name}</h1>\n          <p>Please connect your wallet to continue.</p>\n          <Button\n            onClick={() => connect().catch((e) => console.log(e))}\n            variant=\"outline-light\"\n            className=\"rounded-pill px-3 mt-3\"\n          >\n            Connect Wallet\n          </Button>\n        </div>\n\n        <p className=\"mt-auto text-secondary\">Powered by Celo</p>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nCover.propTypes = {\n  name: PropTypes.string,\n};\n\nCover.defaultProps = {\n  name: \"\",\n};\n\nexport default Cover;\n","import axios from \"axios\";\nimport { Web3Storage } from \"web3.storage/dist/bundle.esm.min.js\";\nimport MyNFTContractAddress from \"../contracts/MyNFT-address.json\";\nimport Web3 from \"web3\";\nimport {\n  NotificationSuccess,\n  NotificationError,\n} from \"../components/ui/Notifications\";\nimport React from \"react\";\nimport { toast } from \"react-toastify\";\n\nconst web3 = new Web3();\n\n// initialize IPFS\nconst client = new Web3Storage({\n  token: process.env.REACT_APP_STORAGE_API_KEY,\n});\n\nconst formatName = (name) => {\n  // replace all spaces with %20\n  return encodeURI(name);\n};\n\n// object to convert to file\nconst convertObjectToFile = (data) => {\n  const blob = new Blob([JSON.stringify(data)], { type: \"application/json\" });\n  const files = [new File([blob], `${data.name}.json`)];\n  return files;\n};\n\n// mint an NFT\nexport const mintNft = async (\n  minterContract,\n  performActions,\n  { name, description, ipfsImage, ownerAddress, attributes }\n) => {\n  \n  await performActions(async (kit) => {\n    if (!name || !description || !ipfsImage) return;\n    const { defaultAccount } = kit;\n\n    const data = {\n      name,\n      description,\n      image: ipfsImage,\n      owner: defaultAccount,\n      attributes,\n    };\n\n    try {\n      const limit = await minterContract.methods.getMinterLimit().call()\n      if(limit >= 2) {\n        toast(<NotificationSuccess text=\"You have exceeded minting limit\" />);\n      }\n      \n      // trim any extra whitespaces from the name and\n      // replace the whitespace between the name with %20\n      const fileName = formatName(name);\n\n      //  bundle nft metadata into a file\n      const files = convertObjectToFile(data);\n\n      // save NFT metadata to web3 storage\n      const cid = await client.put(files);\n\n      // IPFS url for uploaded metadata\n      const url = `https://${cid}.ipfs.w3s.link/${fileName}.json`;\n\n      // mint the NFT and save the IPFS url to the blockchain\n      return await minterContract.methods\n        .mintNft(ownerAddress, url)\n        .send({ from: defaultAccount });\n    } catch (error) {\n      console.log(\"Error uploading file: \", error);\n    }\n  });\n};\n\n// list an NFT\nexport const listNft = async (\n  minterContract,\n  performActions,\n  { tokenId, price }\n) => {\n  await performActions(async (kit) => {\n    const { defaultAccount } = kit;\n\n    try {\n      await minterContract.methods\n        .listNft(tokenId, web3.utils.toWei(price))\n        .send({ from: defaultAccount });\n      toast(<NotificationSuccess text=\"List NFT Succesfully.\" />);\n    } catch (error) {\n      console.log(error);\n    }\n  });\n};\n\n\n\n// buy an NFT\nexport const buyNft = async (\n  minterContract,\n  performActions,\n  tokenId,\n  seller,\n  price\n) => {\n  await performActions(async (kit) => {\n    const { defaultAccount } = kit;\n\n    if (seller === kit.defaultAccount) {\n      toast(<NotificationError text=\"You can not buy your own NFT.\" />);\n    } else {\n      try {\n        await minterContract.methods\n          .buyNft(tokenId)\n          .send({ from: defaultAccount, value: price });\n        toast(<NotificationSuccess text=\"Bought NFT Succesfully.\" />);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  });\n};\n\n// update an NFT price\nexport const updateNft = async (\n  minterContract,\n  performActions,\n  tokenId,\n  { newPrice }\n) => {\n  await performActions(async (kit) => {\n    try {\n      await minterContract.methods\n        .updateListing(tokenId, web3.utils.toWei(newPrice))\n        .send({ from: kit.defaultAccount });\n      toast(<NotificationSuccess text=\"Update NFT Succesfully.\" />);\n    } catch (error) {\n      console.log(error);\n    }\n  });\n};\n\n// remove an NFT from marketplace\nexport const removeNft = async (minterContract, performActions, tokenId) => {\n  await performActions(async (kit) => {\n    try {\n      await minterContract.methods\n        .cancelListing(tokenId)\n        .send({ from: kit.defaultAccount });\n      toast(<NotificationSuccess text=\"Remove NFT Succesfully.\" />);\n    } catch (error) {\n      console.log(error);\n    }\n  });\n};\n\n// function to upload a file to IPFS via web3.storage\nexport const uploadFileToWebStorage = async (e) => {\n  // Construct with token and endpoint\n  const client = new Web3Storage({\n    token: process.env.REACT_APP_STORAGE_API_KEY,\n  });\n  const files = e.target.files;\n  const file = files[0];\n  const fileName = file.name;\n  const imageName = formatName(fileName);\n  const cid = await client.put(files);\n  return `https://${cid}.ipfs.w3s.link/${imageName}`;\n};\n\n// fetch all NFTs on the smart contract\nexport const getNfts = async (minterContract) => {\n  try {\n    const nfts = [];\n    const nftsLength = await minterContract.methods.totalSupply().call();\n    for (let i = 0; i < Number(nftsLength); i++) {\n      const nft = new Promise(async (resolve) => {\n        const res = await minterContract.methods.tokenURI(i).call();\n        const meta = await fetchNftMeta(res);\n        const owner = await fetchNftOwner(minterContract, i);\n        resolve({\n          index: i,\n          owner,\n          name: meta.data.name,\n          image: meta.data.image,\n          description: meta.data.description,\n          attributes: meta.data.attributes,\n        });\n      });\n      nfts.push(nft);\n    }\n    return Promise.all(nfts);\n  } catch (e) {\n    console.log({ e });\n  }\n};\n\n\nexport const getOwnersNfts = async (minterContract, address) => {\n  try {\n    const nfts = [];\n    const nftsLength = await minterContract.methods.totalSupply().call();\n    \n    for (let i = 0; i < Number(nftsLength); i++) {\n      \n      const nft = new Promise(async (resolve,reject) => {\n        const res = await minterContract.methods.tokenURI(i).call();\n        const meta = await fetchNftMeta(res);\n        const owner = await fetchNftOwner(minterContract, i);\n          resolve({\n            index: i,\n            owner,\n            name: meta.data.name,\n            image: meta.data.image,\n            description: meta.data.description,\n            attributes: meta.data.attributes,\n          });\n            \n      });\n      nfts.push(nft);\n    }\n    return Promise.all(nfts);\n  } catch (e) {\n    console.log({ e });\n  }\n};\n\n\n\n\n// fetch all listed NFTs on the smart contract\nexport const getActiveItem = async (minterContract) => {\n  const activeNfts = [];\n  const nftsLength = await minterContract.methods.totalSupply().call();\n\n  for (let i = 0; i < Number(nftsLength); i++) {\n    const nft = new Promise(async (resolve, reject) => {\n      try {\n        const res = await minterContract.methods.getActiveItem(i).call();\n        const meta = await fetchNftMeta(res.url);\n\n        if (meta != null) {\n          resolve({\n            index: i,\n            seller: res.seller,\n            price: res.price,\n            image: meta.data.image,\n            name: meta.data.name,\n            description: meta.data.description,\n            attributes: meta.data.attributes,\n          });\n        } else {\n          resolve({\n            index: i,\n            seller: \"0x0000000000000000000000000000000000000000\",\n            price: \"\",\n            image: \"\",\n            name: \"\",\n            description: \"\",\n            attributes: [{}, {}, {}],\n          });\n        }\n      } catch (e) {\n        reject(e);\n      }\n    });\n\n    try {\n      const resolvedNft = await nft;\n      activeNfts.push(resolvedNft);\n    } catch (e) {\n      console.log({ e });\n    }\n  }\n\n  return activeNfts;\n};\n\n// get the metedata for an NFT from IPFS\nexport const fetchNftMeta = async (ipfsUrl) => {\n  try {\n    if (!ipfsUrl) return null;\n    const meta = await axios.get(ipfsUrl);\n    return meta;\n  } catch (e) {\n    console.log({ e });\n  }\n};\n\n// get the owner address of an NFT\nexport const fetchNftOwner = async (minterContract, index) => {\n  try {\n    return await minterContract.methods.ownerOf(index).call();\n  } catch (e) {\n    console.log({ e });\n  }\n};\n","/* eslint-disable react/jsx-filename-extension */\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Modal, Form, FloatingLabel } from \"react-bootstrap\";\nimport { uploadFileToWebStorage } from \"../../../utils/minter\";\n\n// basic attributes that can be added to NFT\nconst STYLES = [\n  \"Impressionism\",\n  \"Cubism\",\n  \"Surrealism\",\n  \"Pop\",\n  \"Realism\",\n  \"Fauvism\"\n];\nconst EDITION = [\n  \"Open Edition\",\n  \"Collectors Edition\",\n  \"Special Release\",\n  \"Unique Variant\",\n  \"Exclusive Edition\",\n];\nconst THEMES = [\"Pop Cultue and Icon\", \"Emotional Expression\", \"Abstract Geometry\", \"Natue and Botanicals\"];\n\nconst AddNfts = ({ save, address }) => {\n  const [name, setName] = useState(\"\");\n  const [ipfsImage, setIpfsImage] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  //store attributes of an NFT\n  const [attributes, setAttributes] = useState([]);\n  const [show, setShow] = useState(false);\n\n  // check if all form data has been filled\n  const isFormFilled = () =>\n    name && ipfsImage && description && attributes.length > 2;\n\n  // close the popup modal\n  const handleClose = () => {\n    setShow(false);\n    setAttributes([]);\n  };\n\n  // display the popup modal\n  const handleShow = () => setShow(true);\n\n  // add an attribute to an NFT\n  const setAttributesFunc = (e, trait_type) => {\n    const { value } = e.target;\n    const attributeObject = {\n      trait_type,\n      value,\n    };\n    const arr = attributes;\n\n    // check if attribute already exists\n    const index = arr.findIndex((el) => el.trait_type === trait_type);\n\n    if (index >= 0) {\n      // update the existing attribute\n      arr[index] = {\n        trait_type,\n        value,\n      };\n      setAttributes(arr);\n      return;\n    }\n\n    // add a new attribute\n    setAttributes((oldArray) => [...oldArray, attributeObject]);\n  };\n\n  return (\n    <>\n      <Button\n        onClick={handleShow}\n        variant=\"dark\"\n        className=\"rounded-pill py-2 d-flex justify-content-center \"\n        style={{ width: \"130px\" }}\n      >\n        <i className=\"bi bi-plus\"></i> <span style={{height: \"10px\"}}>Mint NFT</span>\n      </Button>\n\n      {/* Modal */}\n      <Modal show={show} onHide={handleClose} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>Mint NFT</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Form>\n            <FloatingLabel\n              controlId=\"inputLocation\"\n              label=\"Name\"\n              className=\"mb-3\"\n            >\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Name of NFT\"\n                onChange={(e) => {\n                  setName(e.target.value);\n                }}\n              />\n            </FloatingLabel>\n\n            <FloatingLabel\n              controlId=\"inputDescription\"\n              label=\"Description\"\n              className=\"mb-3\"\n            >\n              <Form.Control\n                as=\"textarea\"\n                placeholder=\"description\"\n                style={{ height: \"80px\" }}\n                onChange={(e) => {\n                  setDescription(e.target.value);\n                }}\n              />\n            </FloatingLabel>\n\n            <Form.Control\n              type=\"file\"\n              className={\"mb-3\"}\n              onChange={async (e) => {\n                const imageUrl = await uploadFileToWebStorage(e);\n                if (!imageUrl) {\n                  alert(\"failed to upload image\");\n                  return;\n                }\n                setIpfsImage(imageUrl);\n              }}\n              placeholder=\"Product name\"\n            />\n            <Form.Label>\n              <h5>Metadata</h5>\n            </Form.Label>\n            <Form.Control\n              as=\"select\"\n              className={\"mb-3\"}\n              onChange={async (e) => {\n                setAttributesFunc(e, \"Style\");\n              }}\n              placeholder=\"styles\"\n            >\n              <option hidden>Styles</option>\n              {STYLES.map((_style) => (\n                <option\n                  key={`style-${_style.toLowerCase()}`}\n                  value={_style.toLowerCase()}\n                >\n                  {_style}\n                </option>\n              ))}\n            </Form.Control>\n\n            <Form.Control\n              as=\"select\"\n              className={\"mb-3\"}\n              onChange={async (e) => {\n                setAttributesFunc(e, \"edition\");\n              }}\n              placeholder=\"NFT Edition\"\n            >\n              <option hidden>Edition</option>\n              {EDITION.map((_edition) => (\n                <option\n                  key={`edition-${_edition.toLowerCase()}`}\n                  value={_edition.toLowerCase()}\n                >\n                  {_edition}\n                </option>\n              ))}\n            </Form.Control>\n\n            <Form.Control\n              as=\"select\"\n              className={\"mb-3\"}\n              onChange={async (e) => {\n                setAttributesFunc(e, \"theme\");\n              }}\n              placeholder=\"NFT Theme\"\n            >\n              <option hidden>Theme</option>\n              {THEMES.map((theme) => (\n                <option\n                  key={`theme-${theme.toLowerCase()}`}\n                  value={theme.toLowerCase()}\n                >\n                  {theme}\n                </option>\n              ))}\n            </Form.Control>\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"outline-secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button\n            variant=\"dark\"\n            disabled={!isFormFilled()}\n            onClick={() => {\n              save({\n                name,\n                ipfsImage,\n                description,\n                ownerAddress: address,\n                attributes,\n              });\n              handleClose();\n            }}\n          >\n            Mint NFT\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nAddNfts.propTypes = {\n  // props passed into this component\n  save: PropTypes.func.isRequired,\n  address: PropTypes.string.isRequired,\n};\n\nexport default AddNfts;\n","/* eslint-disable react/jsx-filename-extension */\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Modal, Form, FloatingLabel } from \"react-bootstrap\";\n\nconst SellNft = ({ save }) => {\n  const [tokenId, setTokenId] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [show, setShow] = useState(false);\n\n  // check if all form data has been filled\n  const isFormFilled = () => tokenId && price;\n\n  // close the popup modal\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  // display the popup modal\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Button\n        onClick={handleShow}\n        variant=\"dark\"\n        className=\"rounded-pill py-2 d-flex justify-content-center\"\n        style={{ width: \"auto\" }}\n      >\n        <i className=\"bi bi-plus\"></i> <span>Sell Your NFT</span>\n      </Button>\n\n      {/* Modal */}\n      <Modal show={show} onHide={handleClose} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>Sell Your NFT</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Form>\n            <FloatingLabel\n              controlId=\"tokenid\"\n              label=\"Token ID\"\n              className=\"mb-3\"\n            >\n              <Form.Control\n                type=\"number\"\n                placeholder=\"token id of NFT\"\n                onChange={(e) => {\n                  setTokenId(e.target.value);\n                }}\n              />\n            </FloatingLabel>\n\n            <FloatingLabel controlId=\"price\" label=\"Price\" className=\"mb-3\">\n              <Form.Control\n                type=\"number\"\n                placeholder=\"price of NFT\"\n                onChange={(e) => {\n                  setPrice(e.target.value);\n                }}\n              />\n            </FloatingLabel>\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"outline-secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button\n            variant=\"dark\"\n            disabled={!isFormFilled()}\n            onClick={() => {\n              save({\n                tokenId,\n                price,\n              });\n              handleClose();\n            }}\n          >\n            Sell Your NFT\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nSellNft.propTypes = {\n  // props passed into this component\n  save: PropTypes.func.isRequired,\n};\n\nexport default SellNft;\n","import { createContext, useState } from \"react\";\n\nexport const x = createContext();\n\nexport const Provider = ({ children }) => {\n  // context to share global variables\n  const [content, setContent] = useState(\"collection\");\n  const [nfts, setNfts] = useState([]);\n  const [activeNfts, setActiveNfts] = useState([]);\n\n  return (\n    <x.Provider\n      value={{ content, setContent, nfts, setNfts, activeNfts, setActiveNfts }}\n    >\n      {children}\n    </x.Provider>\n  );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, Col, Badge, Stack, Row } from \"react-bootstrap\";\nimport { truncateAddress } from \"../../../utils\";\nimport Identicon from \"../../ui/Identicon\";\nimport { x } from \"../../../context\";\nimport { updateNft, removeNft, buyNft, } from \"../../../utils/minter\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport Web3 from \"web3\";\n\nconst web3 = new Web3();\n\nconst NftCard = ({ nft, contract, rerestAsset }) => {\n  const { image, description, owner, name, index, attributes, price, seller } =\n    nft;\n  const { content } = React.useContext(x);\n\n  let _price = \"\";\n  if (price) {\n    _price = price.toString();\n  }\n\n  const { performActions, address } = useContractKit();\n\n  const [show, setShow] = React.useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => {\n    if (seller === address && content === \"marketplace\") {\n      setShow(true);\n    }\n  };\n\n  const handleUpdate = async (data) => {\n    try {\n      await updateNft(contract, performActions, index, data);\n      rerestAsset();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleRemove = async () => {\n    try {\n      await removeNft(contract, performActions, index);\n      rerestAsset();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleBuy = async () => {\n    try {\n      await buyNft(contract, performActions, index, seller, price);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Col key={index}>\n      <Card className=\" h-100\">\n        <Card.Header>\n          <Stack direction=\"horizontal\" gap={2}>\n            {content === \"collection\" ? (\n              <>\n                <span className=\"font-monospace text-secondary\">\n                  Owned by\n                  {owner === address ? ` You` : ` ${truncateAddress(owner)}`}\n                </span>\n                <a\n                  href={`https://alfajores-blockscout.celo-testnet.org/address/${owner}/transactions`}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  <Identicon address={owner} size={28} />\n                </a>\n              </>\n            ) : (\n              <>\n                <span className=\"font-monospace text-secondary\">\n                  Own by\n                  {seller === address ? ` You` : ` ${truncateAddress(seller)}`}\n                </span>\n                <a\n                  href={`https://alfajores-blockscout.celo-testnet.org/address/${seller}/transactions`}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  <Identicon address={seller} size={28} />\n                </a>\n              </>\n            )}\n\n            <Badge bg=\"secondary\" className=\"ms-auto\">\n              {index} ID\n            </Badge>\n          </Stack>\n        </Card.Header>\n\n        <div className=\"ratio ratio-4x3 \">\n          <img\n            src={image}\n            alt={description}\n            style={{ objectFit: \"cover\" }}\n            onClick={handleShow}\n          />\n        </div>\n\n        <Card.Body className=\"d-flex flex-column text-center \">\n          <Card.Title onClick={handleShow}>{name}</Card.Title>\n          <Card.Text className=\"flex-grow-1\" onClick={handleShow}>\n            {description}\n          </Card.Text>\n\n          {content === \"marketplace\" && (\n            <div className=\"d-grid gap-2 mt-1 mb-3\">\n              <button\n                className=\"btn btn-lg btn-outline-dark buyBtn fs-6 p-3\"\n                onClick={handleBuy}\n              >\n                {/* buy for {parseFloat(price * 10e-19)} CELO  */}\n                buy for {parseFloat(web3.utils.fromWei(_price, \"ether\"))} CELO\n              </button>\n            </div>\n          )}\n\n          <div>\n            <Row className=\"mt-2 row\">\n              {attributes.map((attribute, key) => (\n                <Col key={key} className=\"col-12 my-1 \">\n                  <div className=\"border rounded bg-light\">\n                    <div className=\"text-dark fw-lighter small text-capitalize\">\n                      {attribute.trait_type}\n                    </div>\n                    <div className=\"text-secondary text-capitalize font-monospace\">\n                      {attribute.value}\n                    </div>\n                  </div>\n                </Col>\n              ))}\n            </Row>\n          </div>\n        </Card.Body>\n      </Card>\n    </Col>\n  );\n};\n\nNftCard.propTypes = {\n  // props passed into this component\n  nft: PropTypes.instanceOf(Object).isRequired,\n  contract: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default NftCard;\n","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nconst Loader = () => (\n  <div className=\"d-flex justify-content-center\">\n    <Spinner animation=\"border\" role=\"status\" className=\"opacity-25\">\n      <span className=\"visually-hidden\">Loading...</span>\n    </Spinner>\n  </div>\n);\nexport default Loader;\n","import { useContractKit } from \"@celo-tools/use-contractkit\";\nimport React, { useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport PropTypes from \"prop-types\";\nimport AddNfts from \"./Add\";\nimport SellNft from \"./Sell\";\nimport Nft from \"./Card\";\nimport Loader from \"../../ui/Loader\";\nimport { NotificationSuccess, NotificationError } from \"../../ui/Notifications\";\nimport {\n  getActiveItem,\n  mintNft,\n  listNft,\n  getOwnersNfts,\n} from \"../../../utils/minter\";\nimport { Row } from \"react-bootstrap\";\nimport { x } from \"../../../context\";\n\nconst NftList = ({ minterContract, name }) => {\n  /* performActions : used to run smart contract interactions in order\n   *  address : fetch the address of the connected wallet\n   */\n  const { performActions, address } = useContractKit();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null)\n  const [myNFT, setMyNFT] = useState([])\n  const [myLimit, setMyLimit] = useState(0)\n  const { content, nfts, setNfts, activeNfts, setActiveNfts } =\n    React.useContext(x);\n\n  const handleResetAsset = () => getAssets(); // reset when update or delete NFT\n  \n\n  // function to get NFTs\n  const getAssets = async () => {\n    try {\n      setLoading(true);\n      \n      // fetch all nfts from the smart contract\n      if (content === \"collection\") {\n        \n        // const _nfts = await getNfts(minterContract);\n        const _nfts = await getOwnersNfts(minterContract, address)\n        setNfts(_nfts);\n\n      } else if (content === \"marketplace\") {\n        const _activeNfts = await getActiveItem(minterContract);\n        setActiveNfts(_activeNfts);\n      }\n      if (!nfts || !activeNfts) return;\n    } catch (error) {\n      toast(<NotificationError text={error} />);\n      setError(error)\n      console.log( error );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n\nuseEffect(() =>{\n  const getMyNFTs = nfts.filter(nft => nft.owner == address)\n  setMyNFT(getMyNFTs)\n  console.log(getMyNFTs, address, nfts)\n}, [address, nfts])\n  \n\n\n  \n\n\n  // function when click on the sell button, check owner, exist,...\n  const sellNft = async (data) => {\n    try {\n      if (nfts[data.tokenId] === undefined) {\n        toast(<NotificationError text=\"NFT does not exist.\" />);\n      } else if (nfts[data.tokenId].owner !== address) {\n        toast(<NotificationError text=\"You are not the owner of the NFT.\" />);\n      } else if (nfts[data.tokenId].price !== undefined) {\n        toast(<NotificationError text=\"NFT already in marketplace.\" />);\n      } else {\n        setLoading(true);\n\n        // create an nft functionality\n        await listNft(minterContract, performActions, data);\n        getAssets();\n      }\n    } catch (error) {\n      console.log({ error });\n      toast(<NotificationError text=\"Failed to mint an NFT.\" />);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // function when click on the create button\n  const addNft = async (data) => {\n    \n    try {\n      setLoading(true);\n\n      // create an nft functionality\n      await mintNft(minterContract, performActions, data);\n      toast(<NotificationSuccess text=\"Adding to NFT list....\" />);\n      getAssets();\n    } catch (error) {\n      console.log({ error });\n      toast(<NotificationError text=\"Failed to mint an NFT.\" />);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n\n  // useEffect that get the asset when something change\n  useEffect(() => {\n    try {\n      if (address && minterContract) {\n        getAssets();\n      }\n    } catch (error) {\n      console.log({ error });\n    }\n  }, [minterContract, address, content,]);\n\n\n  if (address) {\n    return (\n      <>\n        {!loading ? (\n          <>\n            <div className=\"d-flex justify-content-between align-items-center mb-4\">\n              <h1 className=\"fs-4 fw-bold mb-0\">{name}</h1>\n              \n            \n              {content === \"collection\" ? (\n                <AddNfts save={addNft} address={address} />\n              ) : (\n                <SellNft save={sellNft} />\n              )}\n            </div>\n            \n            <Row xs={1} sm={2} lg={3} className=\"g-3  mb-5 g-xl-4 g-xxl-5\">\n              {/* display all NFTs */}\n              {content === \"collection\"\n                ? myNFT.map((_nft) => (\n                    <Nft\n                      key={_nft.index}\n                      nft={{\n                        ..._nft,\n                      }}\n                      contract={minterContract}\n                      rerestAsset={handleResetAsset}\n                    />\n                  ))\n                : activeNfts.map((_nft) => {\n                    if (\n                      _nft.seller !==\n                      \"0x0000000000000000000000000000000000000000\"\n                    ) {\n                      return (\n                        <Nft\n                          key={_nft.index}\n                          nft={{\n                            ..._nft,\n                          }}\n                          contract={minterContract}\n                          rerestAsset={handleResetAsset}\n                        />\n                      );\n                    }\n                  })}\n            </Row>\n          </>\n        ) : (\n          <Loader />\n        )}\n      </>\n    );\n  }\n  return null;\n};\n\nNftList.propTypes = {\n  // props passed into this component\n  minterContract: PropTypes.instanceOf(Object),\n  updateBalance: PropTypes.func.isRequired,\n};\n\nNftList.defaultProps = {\n  minterContract: null,\n};\n\nexport default NftList;\n","import { useContract } from \"./useContract\";\nimport MyNFTAbi from \"../contracts/MyNFT.json\";\nimport MyNFTContractAddress from \"../contracts/MyNFT-address.json\";\n\nexport const useMinterContract = () =>\n  useContract(MyNFTAbi.abi, MyNFTContractAddress.MyNFT);\n","import { useState, useEffect, useCallback } from \"react\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\n\nexport const useContract = (abi, contractAddress) => {\n  const { getConnectedKit, address } = useContractKit();\n  const [contract, setContract] = useState(null);\n\n  const getContract = useCallback(async () => {\n    const kit = await getConnectedKit();\n    setContract(new kit.web3.eth.Contract(abi, contractAddress));\n  }, [getConnectedKit, abi, contractAddress]);\n\n  useEffect(() => {\n    if (address) getContract();\n  }, [address, getContract]);\n\n  return contract;\n};\n","import React, { useState } from \"react\";\nimport { Container, Nav } from \"react-bootstrap\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport { Notification } from \"./components/ui/Notifications\";\nimport Wallet from \"./components/Wallet\";\nimport Cover from \"./components/minter/Cover\";\nimport Nfts from \"./components/minter/nfts\";\nimport { useBalance, useMinterContract } from \"./hooks\";\nimport coverImg from \"./assets/img/artistic-style.jpg\";\nimport \"./App.css\";\nimport { x } from \"./context\";\n\nconst App = function AppWrapper() {\n  const { address, destroy, connect } = useContractKit();\n  const { balance, getBalance } = useBalance();\n  const minterContract = useMinterContract();\n  const { content, setContent } = React.useContext(x);\n  let title = content === \"collection\" ? \"Artistic Style Collection\" : \"Artistic Style Marketplace\";\n\n\n  const [collectionActive, setCollectionActive] = useState(true)\n  const [marketActive, setMarketActive] = useState(false)\n\n  function handleCollectionActive() {\n    setCollectionActive(true)\n    setMarketActive(false)\n  }\n  function handleMarketActive() {\n    setCollectionActive(false)\n    setMarketActive(true)\n  }\n\n  return (\n    <>\n      <Notification />\n      {address ? (\n        true ? (\n          <Container fluid=\"md\" >\n            <Nav className=\"d-flex pt-3 py-1 px-3 gap-5 \">\n              <Nav.Item>\n                <Nav.Link\n                  className=\"mx-2 \"\n                  onClick={() => {\n                    setContent(\"collection\");\n                  }}\n                >\n                  <h3 onClick={handleCollectionActive} style={{color: collectionActive ? 'blue' : 'grey'}}>My Collection</h3>\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link\n                  className=\"mx-2 \"\n                  onClick={() => {\n                    setContent(\"marketplace\");\n                  }}\n                >\n                  <h3 onClick={handleMarketActive} style={{color: marketActive ? 'blue' : 'grey'}}>Marketplace</h3>\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item className=\"ms-auto\">\n                <Wallet\n                  address={address}\n                  amount={balance.CELO}\n                  symbol=\"CELO\"\n                  destroy={destroy}\n                />\n              </Nav.Item>\n            </Nav>\n\n            <main className=\"mt-4 p-4\"style={{backgroundColor:'rgb(0, 0, 0,  0.1)'}} >\n              <Nfts\n                name={title}\n                updateBalance={getBalance}\n                minterContract={minterContract}\n              />\n            </main>\n          </Container>\n        ) : (\n          <div></div>\n        )\n      ) : (\n        <Cover name=\"Artistic Style Collection\" coverImg={coverImg} connect={connect} />\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import { useState, useEffect, useCallback } from \"react\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\n\nexport const useBalance = () => {\n  const { address, kit } = useContractKit();\n  const [balance, setBalance] = useState(0);\n\n  const getBalance = useCallback(async () => {\n    // fetch a connected wallet token balance\n    const value = await kit.getTotalBalance(address);\n    setBalance(value);\n  }, [address, kit]);\n\n  useEffect(() => {\n    if (address) getBalance();\n  }, [address, getBalance]);\n\n  return {\n    balance,\n    getBalance,\n  };\n};\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n  ContractKitProvider,\n  Alfajores,\n  NetworkNames,\n} from \"@celo-tools/use-contractkit\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"@celo-tools/use-contractkit/lib/styles.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport { Provider } from \"./context\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ContractKitProvider\n      networks={[Alfajores]}\n      network={{\n        name: NetworkNames.Alfajores,\n        rpcUrl: \"https://alfajores-forno.celo-testnet.org\",\n        graphQl: \"https://alfajores-blockscout.celo-testnet.org/graphiql\",\n        explorer: \"https://alfajores-blockscout.celo-testnet.org\",\n        chainId: 44787,\n      }}\n      dapp={{\n        name: \"Celo React Boilerplate\",\n        description: \"A React Boilerplate for Celo Dapps\",\n      }}\n    >\n      <Provider>\n        <App />\n      </Provider>\n    </ContractKitProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}